gui design
  punkte:
    multiple auswählen
    löschen
    editieren
    neuanlagen
    zeilenfilter
    spaltenaufbau
    sortierung
    wie fkt' form-validierung in vaadin?
      validierung für edit & new
  abstraktionen für o.g. punkte
  scaffolding?


onchange-listener für form oder beanitem? (damit man erst bei tatsächlichem, aktivem start des editvorganges locken kann)
  via vaadin-formfield-factory

grundlegende tests
  table mit 500000 records -> ok
  wie arbeitet die table bei large datasets (zb. 3-7 mio. records)? (pagination/lazy-gui/lazy-container)
  testen mit 50 mvp-triaden & 50+ usern (ram, cpu, garbagecollection, messageanzahl)

"inter-user data-change notification": was wird gleichzeitig von mehreren usern bearbeitet? wie damit umgehen?
  record
    update
      pessimistic lock mit lock & unlock notifizierung
    create
    delete
    jeweils reload (bei batch-jobs after batch finished)
  trigger notify (mechanismus in postgresql, in oracle heißt das anders)
    möglich mit zieldatenbank?
      was ist die zieldatenbank?
    essentiell oder nice2have?
    wie fkt das technisch?
      threads nötig? wie sicher gestalten? actors?
        wo ist die mainloop in einer webapp? kann man aus einem anderen thread/prozess messages hinscicken?
      wie kann man trigger abschalten/ignorieren (für batchprocessing)?
    kann/muß db-abstraction layer das tun? 

batchjob problematik:
  entweder mit ausschuss-nachbearbeitung (schlechte alternative)
  oder mit pessimistic lock 
    vor lauf müssten alle beteiligten tables gelockt werden
      vor start des batch user über lock informieren
        z.b. countdown von x sekunden anzeigen
      oder mit lock (und somit mit batchjob run) warten bis jeder user mit edit fertig ist
  "batchjob"/batchprocessing einführen
    das, was momentan das "a=b" ist
      was ist das genau im einzelnen? gibt es welche, die rein fachlich sind und daher im neuen system auch gebraucht werden könnten?
    wie wird man los, diese zu bestimmten zeitpunkten in der dekadenverarb' ausführen zu müssen?
      gar nicht? dann bleiben sie was sie sind, nämlich technische modalitäten (ausführungsarten), die dem fachlichen benutzer keinerlei mehrwert bringen (z.b. initialisieren von feldern o.ä.)
        außderdem haben sie fürchterliche namen
      könnte man wizard-mässig durch einzelne GPA oder ganze GPA-Abfolgen durchführen?

win-geo beibehalten
  per user für jedes fenster
  wie fkt vaadin url fragment? site-location (was sollen browser back/fwd/reload buttons bewirken?)

verschiedene gui's für verschiedene user: wie?
ok-user/gruppen/rollen - rechteverteilung wie?
  rollen sind für rechtevergabe. ein user ist 1 rolle zugeordnet
  rollen werden später mit ad via ldap gesynct
  gruppen sind für zus'fassung von filter, zeilenaufbau und rfu. ein user ist 1 gruppe zugeordnet

sourcecode management:
  ok-versionieren
  ok-db scala- oder mybatis migrations?
  logging
  source dokumentation: event-sender und receiver müssen gut erkennbar sein 
    (scaladoc @see fkt nicht, yui-doc macht das nicht)
  development als tdd mit unit testing? (junit)
  scaffolding für table/edit triaden?

umgang mit/ops auf großen datenmengen/tabellenzeilen
  nötig für was? nur für admin-mässige user? wie bequem?
  reicht es, daß user lediglich filter auswählt u. die anzahl angezeigt bekommt und keine table?
  und daß er dann eine bequeme "fadenkreuz" fkt. hat?

alle "proto"'s werden zu log-ausgaben
  manche davon sind für user relevant und sollten als verarbeitungs-rückmeldung angezeigt werden
  protokolle parallel zu log? mit selbem logging mechanismus? welcher user soll die sehen können?

database-design für row_filter, col_setup, row_sorting
  welche der 4 alternativen (siehe papier-skizze)?

row-filter-ketten
  fahrtbericht: n * user.location (or) -> user -> tag -> m * gg-filter (and)
  soll m = 2 sein?
  filter de-/aktivieren übersichtlich und bequem in gui einbauen
    split panel in übersicht-tab
  filter editieren
    wer soll das können? nur admin? ausgewählte "power-user"?
    "power-user dialog" nötig (oder reicht sql-statement)?
      wie kompliziert wäre ein solcher dialog?

col-setup
  =position+breite+fixed
  fixed notwendig (wird das oft benutzt)?
    wie fixe spalten realisieren?

sortierung
  multiple sortierung: 
    wie technisch in vaadin?
    editing bequem in gui einbauen?
  
user-vorschlag: "details" für ausgewählte datensätze
  zeigt form (readonly?) in neuem fenster an (1 fenster pro datensatz)
  button in Tabellen-tabbei
  für maximal n ausgewählte; darüber: button ausgrauen

suchen in table
  notwendig (wird das oft benutzt)?
  wie machen in gui-design und technisch?
    feldauswahl, case-sensitivity, wrap, weitersuchen

tag-bedeutungen/kategorien:
  progress/fortschritt innerhalb einer verarbeitung
  attribut
  welche sind fachlich notwendige tags und welche technisch notwendige tags
  nach möglichkeit 1 zu 1 übernahme der (nur relevanten) stati als tag

i18n
  was englisch, was deutsch?
  wo kommen die texte her? resource-system?

db modeling
  history

eyecatcher infos
  zb. um den user zu motivieren ausstehende aufgaben zu erledigen (zb. offene rendevouzfälle)
  oder allg. infos von bestimmten usern (wacheleiter) an bestimmte user
  broadcast infosystem zur verteilung interner neuigkeiten
    z.b. beim oder nach einloggen in einem panel

p2p chat-fkt (zb. "hey, gib mal den datensatz frei")
  http://vaadin.com/forum/-/message_boards/view_message/290837
  http://vaadin.com/web/henrik/wiki/-/wiki/Main/Simple%20Chat/



ok negativ formulierte permission (also restriction) nötig? explizit?
  vlt für filter?
  allgemeiner begriff: etwas einschaltet oder etwas standardmässig eingeschaltetes ausser kraft setzt
    allow/deny, recht/pflicht
    -> action/deed aktion/tat ?!

ok  datenhaltung: welche db? framework: orm/no orm? anbindung table-datasource? id-generation?

ok  sicherheit: wie?

ok  vaadin: anbindung form data

ok  events: enums in scala?
ok  events: kein explizites wire-up, sondern jeder hört alles?

states: 
  ok-per datensatz: hierarchische stati oder ein "sammel-statusfeld" (was sonst)?
  ok-ist session ein state? (session with stateful behaviour)
  ist user recht ein state?
feste zuteilung einer location zu einem computer: wie? (mit standard-inet technologien?)
  custom header per computer? http-request zugänglich in scala/vaadin?
  ok-überhaupt nötig? ist es ok, wenn zb. ein user rechte auf daten der wache x & y hat, egal wo er sich physikalisch befindet?
ok-was passiert wenn user sich einloggt und
  ok-innerhalb eines browsers mehrere tabs mit der selben url
  ok-2te browser-instanz/anderer browser (anderer cookie-cache) mit selber url
  ok-von zweitem rechner
ok-user authentication: wie?

model: wie interagieren services untereinander und innerhalb einer transaction?

welche scopes gibt es? session management?

dependency injection?

große/neue features:
  rollen syncen mit active-directory via ldap
  fahrtbericht anlegen aus leitstellen-system
  divi daten vom tablet-pc zum server incl' fahrtbericht-zuweisung
  drucken aus dem browser
  wysiwyg text-editieren nötig? textblock templates nötig?

architekturelle fragestellungen:
  mvp: wieso events zu pres' aber method-calls auf view & model?
  alles async mit command-pattern. zu übertrieben?
  wäre undo/redo irgendwo gut?
  vaadin: welche daten werden wann hin- und her geschickt?

ok  bequemes orm (n:m), sql direkt, stored-proc, oracle&postgresql, lizenz

gute ide für refactoring & sbt support?

sbt oder maven? (sbt hat afaik incremetal build)

(ok) app architektur pattern: mvc? mvp?
(ok) sprache: scala?

mvp, scala, vaadin, mybatis, sbt, (intellij, guice)

ide? Eclipse, IntelliJ Idea, Netbeans, Emacs, TextMate, vim, Crystal ball

drk kw: 1/83-2
ufo (serie)
immer wenn er pillen nahm
auf der flucht (serie)


eleventech_prototype_app1 epa:
table mit liste von name,telnr; 3 buttons edit,new,delete
bei doppelclick geht edit-fenster auf
in dem fenster kann man felder editieren und es hat save, cancel button.

eleventech_prototype_app2 epa2:
handling large datasets


notes:
stackoverflow scala class with publisher and sub traits
stacyprowell watched properties scala
jim mcbeath simple publish/subscriber example in scala
scala actors 101 debasish ghosh
scalamulticastactors
code examples for programming in scala 30 actors anc conc
stackover scala model-view-presenter traits
programming-scala.labs.oreilly.com
stacko scala listener/observer

pro ejb3 apress (michael keith, merrick schincariol)
pro jpa2 apress
hibernate in action manning bauer
yangdaoqi.info/jpa.html

statefull vs stateless for database developers michael rosenblum dulcian
common data access issues
using postgresql to decouple applications or oo meets sql marc balmer
using pg_notify in postgresql trigger function
agiledata.org/essays/concurrencyControl.html
wiki: javabean und enterprise jababean
torsten-horn.de/techdocs/java-hibernate.htm
dealing with active and stateful services in the soa (springer verlag, haldor samset, rolv braek)
business process driven soa using bpmn and bpel
beginning database-driven application development in java ee (isohunt)


optimistic lock
  beim speichern prüfen und ggf' user informieren
  und/oder bei änderung durch user B user A informieren
  entweder muß user A neuladen (verliert all ihre änderungen)
  oder es kann automatisch gemerged werden (kein verlust)
    und/oder sie muß mergen (verliert teil ihrer änderungen)
  -impl'aufwand höher als bei p.l.

pessimistic lock
  beim editieren wird gesperrt. nach speichern oder abbrechen entsperrt.
  user B kann nur lesen
  nice2have: user B bekommt die info, wer den satz gerade editiert.
  -wann wird locking aufgehoben und was passiert bei benutzer A dann?

overly optimistic lock
  annahme, es gibt kein konkurrierenden schreibzugriffe.
  könnte abgedeckt werden durch rechtesystem


equality:
java                    scala
== val-types -> value   ==
== obj-types -> ptr     eq
equals() -> userdef'val == und equals
