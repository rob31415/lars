ok-table schön machen
ok-angezeigte felder problem
-form feldbeschriftung problem
  -geht nur über fff
ok-table initiale selection problem
ok-neu anlegen leer problem
-layout probleme?
  -app'start window-grosse problem
-scaffolding updaten
-fahrt anlegen
-rg anlegen
-der user soll sehen, welcher andere user den ds gesperrt hat
-validierung impl'
  -passwort einführen


gui design
  punkte:
    multiple auswählen
    löschen
    editieren
    neuanlagen
    zeilenfilter
    spaltenaufbau
    sortierung
    wie fkt' form-validierung in vaadin?
      validierung für edit & new
  abstraktionen für o.g. punkte
    scaffolding?
    vlt dao nocheinmal abstrahieren?


broadcaster notification problem
  app' ist nicht reihenfolgen-agnostisch geschrieben.
  das führt irgendwann zu problemen!
  TODO: analysieren wo - und dort event-sequenzen einführen.
  zur not beim notifizieren testen, indem
  zufällig über die angemeldeten listener iteriert wird...
  der notifikations-mechanismus kann rein theoretisch zukünftig
  auch anders implementiert werden. z.b. über scala-actors.


ui-beautification
  main-layout (zb. menü z-order über rest)
  theme tuning
  vlt' verschiedene theme's, pro user einstellbar (akzeptanz erhöhen)


idee
  system als möglichkeit, ein soziales netzwerk zu untermauern
    user können nachrichten an einzelne oder mehrere empfänger schicken
    user können profil erstellen, welches andere user sehen (zb. pseudonym, bild, telnr. etc.)
    während log-in neuigkeiten (vom system oder infos die alle betreffen) in einer liste anzeigen
      news-admin muß das editieren können

ok 1-zu-n
  ui
    forms überschreiben
      create_form_new
      create_form_edit
      get_bean_from_form
    typ auf ui-element mappen
      formfieldfactory
    table muß fremd-daten aufgelöst anzeigen
    vlt' edit/new form unifizieren aber 2 beans dafür haben?
    vu kriegt zusätzl' set_data methode(n) für fremd-dtos

  model/presenter
    muß presenter daten aus fremd dao holen?
      schon di nötig?
    set_data überschreiben?
    presenter interessiert sich für model-events des fremd-dao


ok n-zu-n
  user-location
    wie?
    java.dzone.com/articles/ibatis-mybatis-handling-joins
    insert?
    update?
    welches gui element?
    java-typ kapseln?
    daten sind alle locations & user.locations
      wie und wann daten nach gui schaufeln?
      

-datenbank: was ist, wenn sequenzen ihr maximum erreichen? wann ist das?


-java-collection in dto problematik
  -kein bock mit jc's rumzuhantieren in fachlogik. will Dtos haben.
  -setter/getter für daos
    -problem hier: 2 unsynchronisierte zugriffsmethoden auf selbe daten
      -lösung: locking
        -problem: unnötig komplexer kram. wohin mit der komplexität?


daos ohne dbzugriff
  wie?


onchange-listener für form oder beanitem? (damit man erst bei tatsächlichem, aktivem start des editvorganges locken kann)
  via vaadin-formfield-factory


grundlegende tests
  table mit 500000 records -> ok
  wie arbeitet die table bei large datasets (zb. 3-7 mio. records)? (pagination/lazy-gui/lazy-container)
  testen mit 50 mvp-triaden & 50+ usern (ram, cpu, garbagecollection, messageanzahl)


"inter-user data-change notification": was wird gleichzeitig von mehreren usern bearbeitet? wie damit umgehen?
  record
    update
      pessimistic lock mit lock & unlock notifizierung
    create
    delete
    jeweils reload (bei batch-jobs after batch finished)
  trigger notify (mechanismus in postgresql, in oracle heißt das anders)
    möglich mit zieldatenbank?
      was ist die zieldatenbank?
    essentiell oder nice2have?
    wie fkt das technisch?
      threads nötig? wie sicher gestalten? actors?
        wo ist die mainloop in einer webapp? kann man aus einem anderen thread/prozess messages hinscicken?
      wie kann man trigger abschalten/ignorieren (für batchprocessing)?
    kann/muß db-abstraction layer das tun? 

batchjob problematik:
  entweder mit ausschuss-nachbearbeitung (schlechte alternative)
  oder mit pessimistic lock 
    vor lauf müssten alle beteiligten tables gelockt werden
      vor start des batch user über lock informieren
        z.b. countdown von x sekunden anzeigen
      oder mit lock (und somit mit batchjob run) warten bis jeder user mit edit fertig ist
  "batchjob"/batchprocessing einführen
    das, was momentan das "a=b" ist
      was ist das genau im einzelnen? gibt es welche, die rein fachlich sind und daher im neuen system auch gebraucht werden könnten?
    wie wird man los, diese zu bestimmten zeitpunkten in der dekadenverarb' ausführen zu müssen?
      gar nicht? dann bleiben sie was sie sind, nämlich technische modalitäten (ausführungsarten), die dem fachlichen benutzer keinerlei mehrwert bringen (z.b. initialisieren von feldern o.ä.)
        außderdem haben sie fürchterliche namen
      könnte man wizard-mässig durch einzelne GPA oder ganze GPA-Abfolgen durchführen?

view-state (win-geo) beibehalten
  system einfallen lassen
  per user für jedes fenster
  wie fkt vaadin url fragment? site-location (was sollen browser back/fwd/reload buttons bewirken?)

verschiedene gui's für verschiedene user: wie?
ok-user/gruppen/rollen - rechteverteilung wie?
  rollen sind für rechtevergabe. ein user ist 1 rolle zugeordnet
  rollen werden später mit ad via ldap gesynct
  gruppen sind für zus'fassung von filter, zeilenaufbau und rfu. ein user ist 1 gruppe zugeordnet

sourcecode management:
  ok-versionieren
  ok-db scala- oder mybatis migrations?
  logging
  source dokumentation: event-sender und receiver müssen gut erkennbar sein 
    (scaladoc @see fkt nicht, yui-doc macht das nicht)
  development als tdd mit unit testing? (junit)
  scaffolding für table/edit triaden?

umgang mit/ops auf großen datenmengen/tabellenzeilen
  nötig für was? nur für admin-mässige user? wie bequem?
  reicht es, daß user lediglich filter auswählt u. die anzahl angezeigt bekommt und keine table?
  und daß er dann eine bequeme "fadenkreuz" fkt. hat?

alle "proto"'s werden zu log-ausgaben
  manche davon sind für user relevant und sollten als verarbeitungs-rückmeldung angezeigt werden
  protokolle parallel zu log? mit selbem logging mechanismus? welcher user soll die sehen können?

database-design für row_filter, col_setup, row_sorting
  welche der 4 alternativen (siehe papier-skizze)?

row-filter-ketten
  fahrtbericht: n * user.location (or) -> user -> tag -> m * gg-filter (and)
  soll m = 2 sein?
  filter de-/aktivieren übersichtlich und bequem in gui einbauen
    split panel in übersicht-tab
  filter editieren
    wer soll das können? nur admin? ausgewählte "power-user"?
    "power-user dialog" nötig (oder reicht sql-statement)?
      wie kompliziert wäre ein solcher dialog?

col-setup
  =position+breite+fixed
  fixed notwendig (wird das oft benutzt)?
    wie fixe spalten realisieren?

sortierung
  multiple sortierung: 
    wie technisch in vaadin?
    editing bequem in gui einbauen?
  
user-vorschlag: "details" für ausgewählte datensätze
  zeigt form (readonly?) in neuem fenster an (1 fenster pro datensatz)
  button in Tabellen-tabbei
  für maximal n ausgewählte; darüber: button ausgrauen

suchen in table
  notwendig (wird das oft benutzt)?
  wie machen in gui-design und technisch?
    feldauswahl, case-sensitivity, wrap, weitersuchen

tag-bedeutungen/kategorien:
  progress/fortschritt innerhalb einer verarbeitung
  attribut
  welche sind fachlich notwendige tags und welche technisch notwendige tags
  nach möglichkeit 1 zu 1 übernahme der (nur relevanten) stati als tag

i18n
  was englisch, was deutsch?
  wo kommen die texte her? resource-system?

db modeling
  history

eyecatcher infos
  zb. um den user zu motivieren ausstehende aufgaben zu erledigen (zb. offene rendevouzfälle)
  oder allg. infos von bestimmten usern (wacheleiter) an bestimmte user
  broadcast infosystem zur verteilung interner neuigkeiten
    z.b. beim oder nach einloggen in einem panel

p2p chat-fkt (zb. "hey, gib mal den datensatz frei")
  http://vaadin.com/forum/-/message_boards/view_message/290837
  http://vaadin.com/web/henrik/wiki/-/wiki/Main/Simple%20Chat/



ok negativ formulierte permission (also restriction) nötig? explizit?
  vlt für filter?
  allgemeiner begriff: etwas einschaltet oder etwas standardmässig eingeschaltetes ausser kraft setzt
    allow/deny, recht/pflicht
    -> action/deed aktion/tat ?!

ok  datenhaltung: welche db? framework: orm/no orm? anbindung table-datasource? id-generation?

ok  sicherheit: wie?

ok  vaadin: anbindung form data

ok  events: enums in scala?
ok  events: kein explizites wire-up, sondern jeder hört alles?

states: 
  ok-per datensatz: hierarchische stati oder ein "sammel-statusfeld" (was sonst)?
  ok-ist session ein state? (session with stateful behaviour)
  ist user recht ein state?
feste zuteilung einer location zu einem computer: wie? (mit standard-inet technologien?)
  custom header per computer? http-request zugänglich in scala/vaadin?
  ok-überhaupt nötig? ist es ok, wenn zb. ein user rechte auf daten der wache x & y hat, egal wo er sich physikalisch befindet?
ok-was passiert wenn user sich einloggt und
  ok-innerhalb eines browsers mehrere tabs mit der selben url
  ok-2te browser-instanz/anderer browser (anderer cookie-cache) mit selber url
  ok-von zweitem rechner
ok-user authentication: wie?

model: wie interagieren services untereinander und innerhalb einer transaction?

welche scopes gibt es? session management?

dependency injection?

große/neue features:
  rollen syncen mit active-directory via ldap
  fahrtbericht anlegen aus leitstellen-system
  divi daten vom tablet-pc zum server incl' fahrtbericht-zuweisung
  drucken aus dem browser
  wysiwyg text-editieren nötig? textblock templates nötig?

architekturelle fragestellungen:
  mvp: wieso events zu pres' aber method-calls auf view & model?
  alles async mit command-pattern. zu übertrieben?
  wäre undo/redo irgendwo gut?
  vaadin: welche daten werden wann hin- und her geschickt?

ok  bequemes orm (n:m), sql direkt, stored-proc, oracle&postgresql, lizenz

gute ide für refactoring & sbt support?

sbt oder maven? (sbt hat afaik incremetal build)

(ok) app architektur pattern: mvc? mvp?
(ok) sprache: scala?

mvp, scala, vaadin, mybatis, sbt, (intellij, guice)

ide? Eclipse, IntelliJ Idea, Netbeans, Emacs, TextMate, vim, Crystal ball

drk kw: 1/83-2
ufo (serie)
immer wenn er pillen nahm
auf der flucht (serie)


eleventech_prototype_app1 epa:
table mit liste von name,telnr; 3 buttons edit,new,delete
bei doppelclick geht edit-fenster auf
in dem fenster kann man felder editieren und es hat save, cancel button.

eleventech_prototype_app2 epa2:
handling large datasets


notes:
stackoverflow scala class with publisher and sub traits
stacyprowell watched properties scala
jim mcbeath simple publish/subscriber example in scala
scala actors 101 debasish ghosh
scalamulticastactors
code examples for programming in scala 30 actors anc conc
stackover scala model-view-presenter traits
programming-scala.labs.oreilly.com
stacko scala listener/observer

pro ejb3 apress (michael keith, merrick schincariol)
pro jpa2 apress
hibernate in action manning bauer
yangdaoqi.info/jpa.html

statefull vs stateless for database developers michael rosenblum dulcian
common data access issues
using postgresql to decouple applications or oo meets sql marc balmer
using pg_notify in postgresql trigger function
agiledata.org/essays/concurrencyControl.html
wiki: javabean und enterprise jababean
torsten-horn.de/techdocs/java-hibernate.htm
dealing with active and stateful services in the soa (springer verlag, haldor samset, rolv braek)
business process driven soa using bpmn and bpel
beginning database-driven application development in java ee (isohunt)


optimistic lock
  beim speichern prüfen und ggf' user informieren
  und/oder bei änderung durch user B user A informieren
  entweder muß user A neuladen (verliert all ihre änderungen)
  oder es kann automatisch gemerged werden (kein verlust)
    und/oder sie muß mergen (verliert teil ihrer änderungen)
  -impl'aufwand höher als bei p.l.

pessimistic lock
  beim editieren wird gesperrt. nach speichern oder abbrechen entsperrt.
  user B kann nur lesen
  nice2have: user B bekommt die info, wer den satz gerade editiert.
  -wann wird locking aufgehoben und was passiert bei benutzer A dann?

overly optimistic lock
  annahme, es gibt kein konkurrierenden schreibzugriffe.
  könnte abgedeckt werden durch rechtesystem


equality:
java                    scala
== val-types -> value   ==
== obj-types -> ptr     eq
equals() -> userdef'val == und equals



ein plädoyer für scala+vaadin+mvp-pattern

das jahr ist 2011. das thema: user-interfaces von webapplikationen.
vor 20 jahren erdachte jemand, daß man gedrucktes in einem computernetz lesen können soll und erschuf ein "system" dafür (www).
dann kamen die sog. "browser-wars", in denen die rebellion (netscape) gegen das imperium (m$) kämpfte - um die gunst der leserschaft - diese wiederum wollte und will viel klicki-bunti.
während dieser kriegszeit ging's darum wer schneller war - also wurden technologien für klicki-bunti so kurzfristig wie möglich nur so auf den markt geschmissen (javasript, css) - mit allem was "kurzfristig" so bedeuten kann.
dann kam die idee, daß der kram ja mittlerweile so mächtig ist, daß man damit ganze anwendungen - wie man sie bis dato als zu installierende software kannte - im browser laufen lassen kann.
dann kam einer und schreibt eine diss, die das furchtbare gestümpere, das bis dahin auf den bestehenden mist gewachsen ist begrifflich zusammenfasst (rest).
und als entwickler war man dann verleitet zu denken: "wenn das so nen dollen namen hat, sich 'natürlich' als praktikabel und funkionierend herauskristallisiert hat, muß das ja was supi-dolles sein. das mach ich jetzt auch so."
und nun zur gegenwart - also was draus geworden ist.
nur ein wort: facebook - und ich meine nicht die (langweiligen ;-) gesellschaftlichen und individuen-rechtlichen implikationen, sondern die benutzerführung.
fb ist ein prima beispiel, für alles was scheisse ist an den user-interfaces von applikationen die auf "standard" web-technologien beruhen.

der leser wird sich jetzt denken: "dann mach's halt besser!"
ok.
ich benutz' scala (und kein scheiss javascript oder java), vaadin (und kein scheiss html & css) und das mvp-pattern (und kein scheiss - äh, was eigentlich genau? reenskaug-mvc? hm, wohl eher nicht...) um eine gute architektur für applikationen zu bauen, die sich u.a. auch in einem manierlichen benutzer-interface niederschlägt.


schlacht und spill = ein schlechten spiel


scala hat viele sehr schöne möglichkeiten, eleganten code zu schreiben, aber diese aus java übernommene c++ template missgeburt namens generics ist wegen der erbkrankheit "type-erasure" ein sehr ernüchterndes ärgernis, über das man immer wieder stolpert.

scala suckt dort wo man mit java in berührung kommt.
das sind generics (generics sind keine templates(!)), (und im erweiterten sinne abstract types), das fehlen von namespaces und vor allem conversions von und nach java collections.
außerdem gibt's (noch) kein manierliches dokumentations-system (scaladoc sucks + keine doku) und debugging habe ich bisher noch nicht betrieben, könnt aber vlt' auch schlecht sein.


dto-type = lards.model.dto.Role
event-type = lards.view.event.Role subtypeof lards.view.event.Editwindow
dto_factory-type = () => dto-type
event_factory-type = (Symbol, collection-type of dto-collection) => event-type,
collection-type of dto-collection = Option[java.util.Set[dto-type]]
view.Editwindow-type = view.Role subtypeof view.Editwindow 
model.dao-type = model.service.Role subtypeof model.service.dao
Class[dto-type]




model.dto = dto-type


model.service.dao
  dto-type


view.event.Editwidow
  dto-type
  collection-type of dto-collection


view.Editwindow
  dto-type
  event-type
  collection-type of dto-collection
  dto_factory-type
  event_factory-type
  
  val parent: Window,
  val title: String,
  val visible_item_props: List[String],
  val dto_type_factory: () => Dto,
  val event_type_factory: (Symbol, Dtos) => Notification_event,
  val class_of_dto: Class[Dto]


presenter.Editwindow
  dto-type
  view.Editwindow-type
  model.dao-type
  
  menuitem-id



howto: Neues standard crud (editwindow) einführen
  neue db-migration schreiben
  in mybatis/config.xml neues mapping zufügen
  datei (mybatis/_REPLACE_.xml) aus scaffolding kopieren und mapping anpassen ("_REPLACE_" ersetzen)
  in presenter.main neue triade instantiieren
  in view.main neuen menüpunkt einführen
  dateien (model, view, presenter) aus scaffolding kopieren, "_REPLACE_" ersetzen und ggf' spezialisierte implementierung zufügen


ganz klar, wenn man die power einer uneingeschränkten gestaltung der software-implementierung hat kann man dinge eleganter machen als mit reinen web-technologien.
